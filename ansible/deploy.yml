- name: provision aws resources
  hosts: localhost
  remote_user: ubuntu
  vars:
    region: us-west-2
    credential_bucket: telemetry-spark-emr-2
    credential_object: crash_rate_aggregates_credentials
    rds_instance_name: crash-rate-aggregates


  tasks:
    - name: fetch credentials for the database from S3
      s3: bucket={{credential_bucket}} object={{credential_object}} dest={{credential_object}} mode=get

    - name: read the database credentials from the downloaded credentials file
      shell: cat {{credential_object}}
      register: result

    - name: parse out the password from the database credentials
      set_fact: db_pass="{{(result.stdout|from_json).password}}"

    - name: delete database credentials file
      file: path={{credential_object}} state=absent

    - name: create a VPC for the database so we can add a security group
      ec2_vpc:
        state: present
        cidr_block: 10.10.0.0/16
        resource_tags: { "Type": "crash-rate-aggregates-service", "App": "pipeline" }
        region: "{{region}}"
        internet_gateway: yes
        subnets:
          - cidr: 10.10.0.0/24
          - cidr: 10.10.1.0/24
            az: us-west-2a
          - cidr: 10.10.2.0/24
            az: us-west-2b
        route_tables:
          - subnets:
             - 10.10.0.0/24
            routes:
              - dest: 0.0.0.0/0
                gw: igw
          - subnets:
             - 10.10.1.0/24
            routes:
              - dest: 0.0.0.0/0
                gw: igw
          - subnets:
             - 10.10.2.0/24
            routes:
              - dest: 0.0.0.0/0
                gw: igw
        wait: yes
      register: vpc

    - name: create the VPC subnet in order to associate the database with the VPC
      rds_subnet_group:
        region: "{{region}}"
        state: present
        name: crash-rate-aggregates
        description: crash rate aggregates
        subnets:
            - "{{vpc.subnets[1].id}}"
            - "{{vpc.subnets[2].id}}"
      register: subnet_group

    - name: create the VPC security group for the database
      ec2_group:
        name: crash-rate-aggregates-database
        description: crash rate aggregates database
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 5432
            to_port: 5432
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
        vpc_id: "{{vpc.vpc_id}}"
      register: db_group

    - name: create the Postgresql database on Amazon RDB
      rds:
        region: "{{region}}"
        command: create
        instance_name: "{{rds_instance_name}}"
        instance_type: db.m4.large
        db_engine: postgres
        db_name: crash_rate_aggregates
        backup_retention: 3
        publicly_accessible: yes
        size: 250
        username: root
        password: "{{db_pass}}"
        subnet: crash-rate-aggregates
        vpc_security_groups: "{{db_group.group_id}}"
        wait: yes
        tags: { App: pipeline, Type: crash-rate-aggregates-db, Owner: rvitillo@mozilla.com }
